doctype html
html(lang='en')
  head
    title ELAB HKBK
    include navbar
    script(src='/ace-builds/src-min/ace.js' charset='utf-8')
    script(src='/ace-builds/src-min/ext-language_tools.js')
    script(src='/assets/js/jquery.min.js')
    
    style(type='text/css').
      #editor {
      position: relative;
      top: 0;
      right: 0;
      bottom: 0;
      left: 20px;
      height: 500px; 
      margin:10px;
      }
      .card {
      width: 650px;
      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
      text-align: left;
      left: 20px;
      padding: 10px;
      margin: 20px;
      position: relative;
      
      }

      
      .option-disp {
        position:relative;
        width: 150px;
        left:20px;
      }

      a:link,a:visited {
        color: black;
        text-align: center;
        text-decoration: none;
        display: inline-block;
      }
      
      html {
        scroll-behavior: smooth;
      }
      textarea {
      border: none;
      background-color: transparent;
      resize: none;
      outline: none;
      }
  body
    .card
      p #{question.statement}
      - if(question.constraints) 
          strong Constraints
          p #{question.constraints}
          |
      strong Input Format
      p #{question.input_format}
      |
      strong Output Format
      p #{question.output_format}
      |
      -let sample_o = Array.from( question.sample_cases.values() );
      -let sample_i = Array.from( question.sample_cases.keys() );
      each i,j in sample_i
        strong Sample Input #{j}
        p #{i}
        strong Sample Output #{j}
        p #{sample_o[j]}
   
        
    .card(style="width:90%; display:inline-block;")
      label(for="lang") Language
      select.option-disp#lang(onchange='language()')
        option(value='python34') Python
        option(value='java26') Java
        option(value='javascript29') Javascript
        option(value='c_cpp') C
        option(value='c_cpp10') C++
        option(value='csharp16') C#
      label(for="theme") Theme
      select.option-disp#theme(onchange='theme()')
        option(value='monokai') Monokai
        option(value='chaos') Chaos
        option(value='dracula') Dracula
        option(value='cobalt') Cobalt
        option(value='gob') Green on Black
        option(value='xcode') XCode
        option(value='chrome') Chrome
        option(value='github') Github
      label Font Size
      select.option-disp#fontsize(onchange='fontSize()')
        option(value='18') 18
        option(value='24') 24
        option(value='30') 30
        option(value='36') 36
      
      div#editor
      button#button.btn(value='Run', onclick='readText()', style='margin-right:20px;border-color:black;width:100px;position:relative;left:20px;') 
        a(href='#opbox') Run
      button#button.btn(value='Submit', onclick='readText()', style='border-color:black;width:100px;position:relative;left:20px;') Submit
    
    #opbox.output_box(style="width:50%; display:inline-block;")


    script.
      let editor = ace.edit("editor");
      ace.require("ace/ext/language_tools");
      editor.setTheme("ace/theme/monokai");
      editor.session.setMode("ace/mode/python");
      editor.getSession().setUseWrapMode(true);

      editor.setOptions({
      enableBasicAutocompletion: true,
      enableSnippets: true,
      enableLiveAutocompletion: true,
      showPrintMargin: false,
      fontSize:18,
      indentedSoftWrap: false

      });
      function theme(){
      let t = document.getElementById("theme").value;
      editor.setTheme("ace/theme/"+t);
      }
      function fontSize() {
        let s = document.getElementById("fontsize").value;
        editor.setOption("fontSize",parseInt(s));
      }
      function language(){
      let l = document.getElementById("lang").value;
      if(l=="c_cpp") ;
      else l=l.slice(0,-2);
      editor.session.setMode("ace/mode/"+l);
      }
      
      function readText () {
      let l = document.getElementById("lang").value;
      if(l=="c_cpp") l=4;
      else l=l.slice(-2);
      $(document).ready(function(){
      $.post("/api",
      {
      source:editor.getValue(),
      language: l
      },
      function(data,status){
      document.getElementById("output").value = data;
      });
      window.location.href="#opbox";
      });
      }

      $(document).ready(function() {
        var count=0;
        $('#button').click(function()
        { 
          if(count==0){
            count=count+1;
            $('#opbox').append('<div name="out" id="out" style="width: 650px;height:600px;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);text-align: left;left: 20px;padding: 10px;margin: 20px;position: relative;"><label><u><b>Input</b></u></label><textarea id="" readonly="readonly" style="width:100%;border:none;"></textarea><label><u><b>Output</b></u></label><textarea id="output" readonly="readonly" style="width:100%;border:none;"></textarea><label><u><b>Expected Output</b></u></label><textarea id="" readonly="readonly" style="width:100%;border:none;"></textarea></div>');
            
          }
        });
        });
